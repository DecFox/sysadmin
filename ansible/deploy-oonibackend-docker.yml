---

# This playbook deploys oonibackend bouncer, collector and test-helpers in one
# docker container of the same host.
#
# An inventory file should look similar to:
# [production]
# production-host
#
# [staging]
# staging-host
#
# [testing]
# testing-host
#
# [production:vars]
# # Testing uncomment to generate test certificates
# # letsencrypt_test_cert=true
# # Deploy a oonibackend in a docker container
# docker_deployment=yes
# # Sets docker's container name used only when docker_deployment is defined
# app_env=bouncer
# IP address of the host where the ports will be exposed.
# Only usefull to hosts with multiple IPs (for single IP hosts use 0.0.0.0)
# docker_ip="0.0.0.0"
# tls_bouncer_port=443
# tcp_bouncer_port=80
# tls_collector_port=4441
# tcp_collector_port=8081
# tls_web_connectivity_port=4442
# tcp_web_connectivity_port=8082
#
# [staging:vars]
# docker_deployment=yes
# app_env=staging-bouncer
# docker_ip="37.218.240.139"
# tls_bouncer_port=443
# tcp_bouncer_port=80
# tls_collector_port=4441
# tcp_collector_port=8081
# tls_web_connectivity_port=4442
# tcp_web_connectivity_port=8082
#
# [testing:vars]
# docker_deployment=yes
# app_env=testing-bouncer
# docker_ip="0.0.0.0"
# tls_bouncer_port=443
# tcp_bouncer_port=80
# tls_collector_port=4441
# tcp_collector_port=8081
# tls_web_connectivity_port=4442
# tcp_web_connectivity_port=8082

- hosts: local:staging:testing:production
  vars:
    ansible_python_interpreter: "/usr/bin/python"
    bind_oonibackend_data_path: "/data/{{ app_env }}"
    bind_oonibackend_tls_dir: "{{ bind_oonibackend_data_path }}/tls"
  roles:
    - common
    - { role: docker_py, when: docker_deployment is defined }
    - { role: letsencrypt, when: docker_deployment is undefined }

- hosts: local:staging:testing:production
  vars:
    ansible_python_interpreter: "/root/venv/bin/python2.7"
    bind_oonibackend_data_path: "/data/{{ app_env }}"
    bind_oonibackend_tls_dir: "{{ bind_oonibackend_data_path }}/tls"
    enable_tls_bouncer: yes
    enable_collector_alternate: yes
    enable_tls_collector: yes
    enable_tls_web_connectivity: yes
    enable_web_connectivity: yes
    enable_bouncer: yes
    docker_deployment: yes
    enable_tcp_web_connectivity: yes
    enable_tcp_bouncer: yes
    enable_tcp_collector: yes
    oonibackend_bundle: yes
  roles:
    - { role: letsencrypt, when: docker_deployment is defined }
    - ooni-backend
