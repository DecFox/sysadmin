---
- name: Wait for hidden services to bootstrap
  wait_for: >
    path="{{ bind_oonibackend_log_path }}/{{ oonibackend_log_file_name }}"
    search_regex="Started hidden service"
    delay="30"

- name: Fetch backend onion related files and keys
  synchronize: >
    mode=pull
    src="{{ item }}"
    dest="{{ backend_conf_path }}"
  with_items:
    - "{{ bind_bouncer_hsdir }}"
    - "{{ bind_collector_hsdir }}"
    - "{{ bind_web_connectivity_hsdir }}"

- name: Template "{{ bind_bouncer_file }}" with bouncer_base.yaml.j2
  template: >
    src="bouncer_base.yaml.j2"
    dest="{{ bind_bouncer_file }}"
    backup="yes"
    unsafe_writes="true"
  when: ( oonibackend_bundle is defined and oonibackend_bundle|bool == true )
  register: bouncer_config_file

- name: Template "{{ bind_bouncer_file }}" with "{{ bouncer_base_template }}"
  template: >
    src="{{ bouncer_base_template }}"
    dest="{{ bind_bouncer_file }}"
    backup="yes"
    unsafe_writes="true"
  when: ( oonibackend_bundle is undefined or oonibackend_bundle|bool == false )
  register: bouncer_config_file

- name: Restart docker containers on bouncer config change
  docker_container:
    name: "{{ docker_img_name }}"
    image: "{{ docker_img_name }}"
    restart: yes
  when: bouncer_config_file.changed

- name: Fetch "{{ bind_oonibackend_conf }}" and "{{ bind_bouncer_file }}"
  fetch: >
    src="{{ item }}"
    dest="{{ backend_conf_path }}"
    flat=yes
  with_items:
    - "{{ bind_oonibackend_conf }}"
    - "{{ bind_bouncer_file }}"
