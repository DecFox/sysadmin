---

## API ##

#- name: install API
#  tags: api
#  apt:
#    cache_valid_time: 86400
#    name: ooni-api=0.1~pr192-96

- name: create Nginx cache dir
  file:
    path: /var/cache/nginx/ooni-api
    state: directory

- name: configure test api
  when: inventory_hostname == 'ams-pg-test.ooni.org'
  tags: api
  template:
    src: api.conf
    dest: /etc/ooni/api.conf
    owner: ooniapi
    group: ooniapi
    mode: 0640
  vars:
    github_push_repo: "ooni-bot/test-lists"
    login_base_url: "https://test-lists.test.ooni.org/login"

- name: configure prod api
  when: inventory_hostname == 'ams-pg.ooni.org'
  tags: api
  template:
    src: api.conf
    dest: /etc/ooni/api.conf
    owner: ooniapi
    group: ooniapi
    mode: 0640
  vars:
    github_push_repo: "citizenlab/test-lists"
    login_base_url: "https://test-lists.ooni.org/login"

- name: create Psiphon conffile
  tags: api
  copy:
    content: "{{ psiphon_config }}"
    dest: /etc/ooni/psiphon_config.json

- name: Write Tor targets conffile
  tags: api
  template:
    src: tor_targets.json
    dest: /etc/ooni/tor_targets.json

- name: configure api uploader using test bucket
  when: inventory_hostname == 'ams-pg-test.ooni.org'
  tags: api
  blockinfile:
    path: /etc/ooni/api-uploader.conf
    create: yes
    block: |
      # OONI API measurement uploader - Python ini format
      [DEFAULT]
      # arn:aws:iam::676739448697:user/ooni-pipeline, AWS: OONI Open Data
      aws_access_key_id = AKIAJURD7T4DTN5JMJ5Q
      # aws_secret_access_key =  {{ s3_ooni_open_data_access_key }}
      bucket_name = ooni-data-eu-fra-test
      msmt_spool_dir = /var/lib/ooniapi/measurements

- name: configure api uploader using PROD bucket
  when: inventory_hostname == 'ams-pg.ooni.org'
  tags: api
  blockinfile:
    path: /etc/ooni/api-uploader.conf
    create: yes
    block: |
      # OONI API measurement uploader - Python ini format
      [DEFAULT]
      # arn:aws:iam::676739448697:user/ooni-pipeline, AWS: OONI Open Data
      aws_access_key_id = AKIAJURD7T4DTN5JMJ5Q
      aws_secret_access_key = {{ s3_ooni_open_data_access_key }}
      bucket_name = ooni-data-eu-fra
      msmt_spool_dir = /var/lib/ooniapi/measurements

- name: Overwrite API nginx conf
  tags: api
  template:
    src: templates/ooni-api.conf
    dest: /etc/nginx/sites-available/ooni-api.conf
    mode: 0755
    owner: root

- name: Configure deb.ooni.org forwarder on prod host
  when: inventory_hostname == 'ams-pg.ooni.org'
  tags: deb_ooni_org
  blockinfile:
    path: /etc/nginx/sites-enabled/deb_ooni_org_http
    create: yes
    block: |
      # Managed by ansible, see roles/ooni-backend/tasks/main.yml
      server {
        listen 80;
        server_name deb.ooni.org;
        location / {
          proxy_pass https://ooni-deb.s3.eu-central-1.amazonaws.com/;
        }
      }

- name: Configure deb-ci.ooni.org forwarder on test host
  when: inventory_hostname == 'ams-pg-test.ooni.org'
  tags: deb_ooni_org
  blockinfile:
    path: /etc/nginx/sites-enabled/deb_ooni_org_http
    create: yes
    block: |
      # Managed by ansible, see roles/ooni-backend/tasks/main.yml
      server {
        listen 80;
        server_name deb-ci.ooni.org;
        location / {
          proxy_pass https://ooni-internal-deb.s3.eu-central-1.amazonaws.com/;
        }
      }

- name: create badges dir
  tags: api
  file:
    path: /var/www/package_badges/
    state: directory

- name: Safely reload Nginx
  tags: api deb_ooni_org
  shell: nginx -t && systemctl reload nginx

- name: allow incoming TCP connections to API
  tags: api
  blockinfile:
    path: /etc/ooni/nftables/tcp/443.nft
    create: yes
    block: |
      add rule inet filter input tcp dport 443 counter accept comment "incoming HTTPS"

#- name: reload nftables service
#  tags: api
#  systemd:
#    name: nftables.service
#    state: reloaded

- name: reload nftables service
  tags: api
  shell: systemctl reload nftables.service


## Fastpath ##

- name: install fastpath if not present
  tags: fastpath
  apt:
    cache_valid_time: 86400
    name: fastpath
    state: present

- name: configure fastpath
  tags: fastpath
  blockinfile:
    path: /etc/ooni/fastpath.conf
    create: yes
    block: |
      # See roles/ooni-backend/tasks/main.yml
      [DEFAULT]
      collectors = localhost
      # The password is already made public
      db_uri = postgresql://shovel:yEqgNr2eXvgG255iEBxVeP@localhost/metadb

      # S3 access credentials
      # used for fetching cans/minicans
      # arn:aws:iam::082866812839:user/ooni-datacollector, AWS: OONI Team
      s3_access_key = AKIAJQAGCR267PNGTTKA
      s3_secret_key: '{{ s3_ooni_open_data_access_key }}'





## Event detector ##

#- name: install detector
#  tags: detector
#  apt:
#    cache_valid_time: 86400
#    name: detector
#
#- name: configure detector
#  tags: detector
#  blockinfile:
#    path: /etc/ooni/detector.conf
#    create: yes
#    block: |
#      # Managed by ansible, see roles/ooni-backend/tasks/main.yml


## Analysis daemon ##

- name: install analysis
  tags: analysis
  apt:
    cache_valid_time: 86400
    name: analysis=0.15~pr324-331
    force: True

- name: configure analysis
  tags: analysis
  blockinfile:
    path: /etc/ooni/analysis.conf
    create: yes
    block: |
      # Managed by ansible, see roles/ooni-backend/tasks/main.yml
      [active]
      dbname = metadb
      dbuser = shovel
      dbpassword = yEqgNr2eXvgG255iEBxVeP
      dbhost = localhost

      [standby]
      dbname = metadb
      dbuser = shovel
      dbpassword = yEqgNr2eXvgG255iEBxVeP
      dbhost = localhost


## Test helper rotation ##

- name: configure test helper rotation
  tags: rotation
  when: inventory_hostname == 'ams-pg.ooni.org'
  blockinfile:
    path: /etc/ooni/rotation.conf
    create: yes
    mode: 0400
    block: |
      # Managed by ansible, see roles/ooni-backend/tasks/main.yml
      [DEFAULT]
      # Digital Ocean token
      token = {{ digital_ocean_token }}
      db_uri = postgresql://shovel:yEqgNr2eXvgG255iEBxVeP@localhost/metadb
      active_droplets_count = 2
      size_slug = s-1vcpu-1gb
      image_name = debian-10-x64
      draining_time_minutes = 1440
      dns_zone = th.ooni.org

- name: configure test helper rotation certbot
  tags: rotation
  when: inventory_hostname == 'ams-pg.ooni.org'
  blockinfile:
    path: /etc/ooni/certbot-digitalocean
    create: yes
    mode: 0400
    block: |
      # Managed by ansible, see roles/ooni-backend/tasks/main.yml
      dns_digitalocean_token = {{ digital_ocean_token }}

- name: configure test helper rotation setup script
  tags: rotation
  when: inventory_hostname == 'ams-pg.ooni.org'
  template:
    src: rotation_setup.sh
    dest: /etc/ooni/rotation_setup.sh

- name: create test helper rotation nginx template
  tags: rotation
  when: inventory_hostname == 'ams-pg.ooni.org'
  template:
    src: rotation_nginx_conf
    dest: /etc/ooni/rotation_nginx_conf

- name: generate test helper rotation SSH keypair
  tags: rotation
  when: inventory_hostname == 'ams-pg.ooni.org'
  openssh_keypair:
    path: /etc/ooni/testhelper_ssh_key
    owner: root
    group: root
    mode: 0400
    type: ed25519
  register: pubkey

- name: print SSH pubkey
  tags: rotation
  when: inventory_hostname == 'ams-pg.ooni.org'
  debug: msg={{ pubkey.public_key }}

- name: Enable and start rotation service
  tags: rotation
  when: inventory_hostname == 'ams-pg.ooni.org'
  systemd:
    daemon_reload: yes
    enabled: yes
    name: ooni-rotation.timer
    state: started


## Tor daemon and onion service ##

- name: install tor daemon
  tags: tor
  apt:
    cache_valid_time: 86400
    name: tor

- name: configure tor onion service
  tags: tor
  blockinfile:
    path: /etc/tor/torrc
    block: |
      # See roles/ooni-backend/tasks/main.yml
      HiddenServiceDir /var/lib/tor/ooni_onion_service/
      HiddenServicePort 80 127.0.0.1:17744
      HiddenServiceVersion 2

- name: configure tor onion service hostname
  when: inventory_hostname == 'ams-pg.ooni.org'
  tags: tor
  blockinfile:
    path: /var/lib/tor/ooni_onion_service/hostname
    create: yes
    owner: debian-tor
    group: debian-tor
    mode: 0644
    block: guegdifjy7bjpequ.onion

- name: configure tor onion service private_key
  when: inventory_hostname == 'ams-pg.ooni.org'
  tags: tor
  blockinfile:
    path: /var/lib/tor/ooni_onion_service/private_key
    create: yes
    owner: debian-tor
    group: debian-tor
    mode: 0600
    block: "{{ amspg_ooni_org_onion_key }}"

- name: set tor onion service directory
  when: inventory_hostname == 'ams-pg.ooni.org'
  tags: tor
  shell: |
    chown debian-tor:debian-tor /var/lib/tor/ooni_onion_service
    chmod 0700 /var/lib/tor/ooni_onion_service

- name: reload tor service
  tags: tor
  systemd:
    name: tor@default.service
    state: reloaded
