- name: create group
  group: name=gorush state=present

- name: create user
  user:
    name: "gorush"
    group: "gorush"
    comment: "gorush for Orchestra"
    state: present

- name: get the user ids
  shell: >
    egrep "^gorush:" /etc/passwd | awk -F: '{ print $3":"$4 }'
  changed_when: false
  register: user_group_id

- name: set permissions, owner and group
  file:
    path: "/srv/gorush"
    state: directory
    owner: "gorush"
    group: "gorush"
    mode: "go-w"
    recurse: yes

- name: Configure gorush
  template:
    src: gorush.yml.j2
    dest: "/srv/gorush/config.yml"

- name: Write Orchestra APN key
  copy:
    content: "{{ orchestra_apn_key_content }}"
    dest: "/srv/gorush/apn-key.pem"

- name: docker run gorush
  docker_container:
    image: appleboy/gorush:1.11.2
    name: gorush
    hostname: gorush
    network_mode: 'host'
    purge_networks: true
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /srv/gorush:/srv/gorush:rw
      - /srv/gorush/config.yml:/config.yml:ro
    user: "{{ user_group_id.stdout }}"
    stop_timeout: 60 # default is 10
    restart_policy: unless-stopped

- name: Install passlib
  apt:
    name: "python-passlib"
    state: present

- name: Create password file for nginx
  htpasswd:
    path: /etc/nginx/orchestra.htpasswd
    name: "{{ orchestra_notify_basic_auth_user }}"
    password: "{{ orchestra_notify_basic_auth_password }}"
    owner: root
    group: www-data
    mode: 0640

- name: Create password file for prometheus endpoint
  copy:
    dest: /etc/nginx/orchestra-notify-prometheus.htpasswd
    owner: root
    group: www-data
    mode: 0640
    content: "prometheus_scraper:{SSHA}{{ prometheus_scraper_ssha }}\n"

- name: Add nginx virtual host config
  template:
    src: gorush-nginx
    dest: /etc/nginx/sites-enabled/gorush
    owner: root
    group: root
    mode: 0644
  notify: restart nginx
