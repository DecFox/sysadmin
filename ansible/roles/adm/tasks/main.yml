---
# This role is part of bootstrap process that creates sysadmin accounts so
# further setup can be done with logged `sudo`.  ooni-sysadmin repo is single
# point of truth for the keys, unknown keys are dropped, that's why
# `authorized_key` ansible module is not used.

- name: install some common packages
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: 28800
  with_items:
    - "sudo"
    - "vim"

- name: create group
  group: name={{ item }} gid={{ passwd[item].id }} state=present
  with_items: "{{ adm_logins }}"

- name: create user
  user:
    name: "{{ item }}"
    group: "{{ item }}"
    uid: "{{ passwd[item].id }}"
    comment: "{{ passwd[item].comment }}"
    shell: /bin/bash
    state: present
  with_items: "{{ adm_logins }}"

- name: create .ssh
  file: path=/home/{{item}}/.ssh state=directory owner={{item}} group={{item}} mode=0700
  with_items: "{{ adm_logins }}"

- name: create .ssh/authorized_keys
  template: src=authorized_keys dest=/home/{{item}}/.ssh/authorized_keys owner={{item}} group={{item}} mode=0400
  with_items: "{{ adm_logins }}"

- name: sudoers.d/adm
  template: src=sudoers dest=/etc/sudoers.d/adm owner=root group=root mode=0440 validate='visudo -cf %s'

# FIXME: eventually /root/.ssh/authorized_keys will be enforced as well
- name: root .ssh/authorized_keys2
  template: src=authorized_keys_root dest=/root/.ssh/authorized_keys2 owner=root group=root mode=0400
