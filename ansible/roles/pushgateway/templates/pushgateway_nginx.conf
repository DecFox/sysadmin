server {
    server_name _;

    listen {{ lookup('dig', inventory_hostname + '/A') }}:9091 ssl;
    {% if lookup('dig', inventory_hostname + '/AAAA') %}
    listen [{{ lookup('dig', inventory_hostname + '/AAAA') }}]:9091 ssl;
    {% endif %}

    # FIXME: maybe https://mozilla.github.io/server-side-tls/ssl-config-generator/ instead?
    # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    ssl_certificate /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem;

    # SSL client cert is checked instead of auth_basic as nginx reads basic auth
    # file on every single request and that may be bad in case of IO issues, see
    # https://github.com/TheTorProject/ooni-sysadmin/issues/155
    ssl_verify_client on;
    ssl_verify_depth 1; # only explicitly signed (0 ~ "ca == peer")
    ssl_client_certificate {{ pushgateway_base }}/pusher_ca.cert;

    location = /.whoami {
        return 200 "ssl_client_s_dn: '$ssl_client_s_dn'\n"; # NB: nginx=1.11.6 changes format
    }

    location = /metrics/job/backup/instance/hellais-nas {
        if ($ssl_client_s_dn != "/O=OONI/OU=Prometheus Pusher/CN=hellais NAS") {
            return 403;
        }
        proxy_pass http://{{ pushgateway_listen_address }};
        proxy_http_version 1.1;
    }

    location / {
        return 404;
    }
}
