---
# Deploy bridges on dedicated VPSes
# This role runs across many versions of Debian and Ubuntu

- name: Install locale
  apt:
    name:
    - locales
    - dirmngr
    - gnupg
    cache_valid_time: '{{ apt_cache_valid_time }}'
    install_recommends: no
    state: latest
    update_cache: yes

- name: localegen
  shell: locale-gen --purge en_US.UTF-8

- name: locales
  shell: echo -e 'LANG="en_US.UTF-8"\nLANGUAGE="en_US:en"\n' > /etc/default/locale

- name: motd
  shell: echo "bridge" > /etc/motd

- name: Update apt cache and upgrade packages
  apt:
    update_cache: yes
    upgrade: dist

- name: Install base packages
  apt:
    name:
    - bash-completion
    - byobu
    - dehydrated
    - etckeeper
    - fail2ban
    - haproxy
    - tcpdump
    cache_valid_time: '{{ apt_cache_valid_time }}'
    install_recommends: no
    state: latest
    update_cache: yes

- name: Autoremove
  apt:
    autoremove: yes

- name: Clean cache
  apt:
    autoclean: yes

## Configure dehydrated and haproxy to forward everything to remote services

# On first run the certificate is missing. Update the conf later on.
- name: Check if TLS cert is present
  tags: bcn
  ansible.builtin.stat:
    path=/var/lib/dehydrated/certs/{{ ansible_host }}/privkey.pem.haproxy
  register: certfile

- name: Deploy haproxy conf with TLS
  tags: bcn
  template:
    src: templates/haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg
    mode: 0755
  vars:
    # Uses dehydrated
    certpath: /var/lib/dehydrated/certs/
    certificate_available: (certfile.stat.exists == True)


## Nftables

- name: nftables directory
  tags: bcn
  ansible.builtin.file:
    path: /etc/ooni/nftables/tcp/
    state: directory

- name: allow incoming HTTP connections to 80
  tags: bcn
  ansible.builtin.shell:
    cmd: echo 'add rule inet filter input tcp dport 80 counter accept' > /etc/ooni/nftables/tcp/80.nft

- name: allow incoming HTTPS connections to 443
  tags: bcn
  ansible.builtin.shell:
    cmd: echo 'add rule inet filter input tcp dport 443 counter accept' > /etc/ooni/nftables/tcp/443.nft

- name: allow incoming HTTPS connections to 444
  tags: bcn
  ansible.builtin.shell:
    cmd: echo 'add rule inet filter input tcp dport 444 counter accept' > /etc/ooni/nftables/tcp/444.nft

- name: reload nftables service
  tags: bcn
  service: name=nftables state=restarted

# Dehydrated section

- name: Deploy dehydrated conf
  tags: bcn
  template:
    src: templates/dehydrated.config
    dest: /etc/dehydrated/config
    mode: 0755

- name: Deploy dehydrated haproxy hook
  tags: bcn
  template:
    src: templates/dehydrated_haproxy_hook.sh
    dest: /etc/dehydrated/haproxy_hook.sh
    mode: 0755

- name: Configure domains
  tags: bcn
  template:
    src: templates/domains.txt.j2
    dest: /etc/dehydrated/domains.txt

- name: Register account if needed
  tags: bcn
  ansible.builtin.shell:
    cmd: "test -d /var/lib/dehydrated/accounts || dehydrated --register --accept-terms"

- name: Install dehydrated.service
  tags: bcn
  template:
    src: templates/dehydrated.service
    dest: /etc/systemd/system/dehydrated.service
    mode: 0644
    owner: root

- name: Install dehydrated.timer
  tags: bcn
  template:
    src: templates/dehydrated.timer
    dest: /etc/systemd/system/dehydrated.timer
    mode: 0644
    owner: root

- name: Ensure timer runs
  tags: bcn
  systemd:
    name: dehydrated.timer
    state: started
    enabled: yes

- name: Run dehydrated service immediately
  # creates:
  # /var/lib/dehydrated/certs/<name>/chain.pem cert.pem privkey.pem fullchain.pem
  tags: bcn
  systemd:
    name: dehydrated.service
    state: started
    enabled: yes

- name: Restart dehydrated
  tags: bcn
  shell: systemctl restart dehydrated

# On first run the certificate could be missing. Update the conf to enable TLS
- name: Check if TLS cert is present
  tags: bcn
  ansible.builtin.stat:
    path=/var/lib/dehydrated/certs/{{ ansible_host }}/privkey.pem.haproxy
  register: certfile

- name: Deploy haproxy conf with TLS
  tags: bcn
  template:
    src: templates/haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg
    mode: 0755
  vars:
    # Uses dehydrated
    certpath: /var/lib/dehydrated/certs/
    certificate_available: (certfile.stat.exists == True)

- name: Restart haproxy
  # reload is not enough
  tags: bcn
  shell: systemctl restart haproxy
